A Map that further provides a total ordering on its keys.
The map is ordered according to the natural ordering of its keys, or by a Comparator typically provided at sorted map creation time.
This order is reflected when iterating over the sorted map's collection views (returned by the entrySet, keySet and values methods).
Several additional operations are provided to take advantage of the ordering. (This interface is the map analogue of SortedSet.)
All keys inserted into a sorted map must implement the Comparable interface (or be accepted by the specified comparator).
Attempts to violate this restriction will cause the offending method or constructor invocation to throw a ClassCastException.
Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be consistent with equals if the sorted map is to correctly implement the Map interface. (See the Comparable interface or Comparator interface for a precise definition of consistent with equals.)
This is so because the Map interface is defined in terms of the equals operation, but a sorted map performs all key comparisons using its compareTo (or compare) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal.
The behavior of a tree map is well-defined even if its ordering is inconsistent with equals; it just fails to obey the general contract of the Map interface.
All general-purpose sorted map implementation classes should provide four standard constructors.
It is not possible to enforce this recommendation though as required constructors cannot be specified by interfaces.
The expected standard constructors for all sorted map implementations are:
A void (no arguments) constructor, which creates an empty sorted map sorted according to the natural ordering of its keys.
A constructor with a single argument of type Comparator, which creates an empty sorted map sorted according to the specified comparator.
A constructor with a single argument of type Map, which creates a new map with the same key-value mappings as its argument, sorted according to the keys natural ordering.
A constructor with a single argument of type SortedMap, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.
Note: several methods return submaps with restricted key ranges. Such ranges are half-open, that is, they include their low endpoint but not their high endpoint (where applicable). If you need a closed range (which includes both endpoints), and the key type allows for calculation of the successor of a given key, merely request the subrange from lowEndpoint to successor(highEndpoint). For example, suppose that m is a map whose keys are strings. The following idiom obtains a view containing all of the key-value mappings in m whose keys are between low and high, inclusive:
